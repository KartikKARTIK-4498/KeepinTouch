{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./newsletter.service\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"scrollContainer\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(fb, newsletterService) {\n      this.fb = fb;\n      this.newsletterService = newsletterService;\n      this.subscriptionForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]]\n      });\n      this.title = 'Keepintouch';\n      this.currentImage = '';\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      this.addDragFunctionality(this.scrollContainer.nativeElement);\n    }\n    addDragFunctionality(container) {\n      let isDown = false;\n      let startX;\n      let scrollLeft;\n      container.addEventListener('mousedown', e => {\n        isDown = true;\n        startX = e.pageX - container.offsetLeft;\n        scrollLeft = container.scrollLeft;\n      });\n      container.addEventListener('mouseleave', () => {\n        isDown = false;\n      });\n      container.addEventListener('mouseup', () => {\n        isDown = false;\n      });\n      container.addEventListener('mousemove', e => {\n        if (!isDown) return;\n        e.preventDefault();\n        const x = e.pageX - container.offsetLeft;\n        const walk = (x - startX) * 3; //scroll-fast\n        container.scrollLeft = scrollLeft - walk;\n      });\n    }\n    addFormValidation() {\n      const form = document.querySelector('form');\n      const emailInput = document.querySelector('#emailInput');\n      if (form && emailInput) {\n        form.addEventListener('submit', event => {\n          event.preventDefault();\n          const emailValue = emailInput.value;\n          if (this.validateEmail(emailValue)) {\n            alert('Email is valid. Form submitted!');\n            // Add form submission logic here\n          } else {\n            alert('Please enter a valid email address.');\n          }\n        });\n      }\n    }\n    validateEmail(email) {\n      const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailPattern.test(email);\n    }\n    onSubmit() {\n      if (this.subscriptionForm.valid) {\n        const email = this.subscriptionForm.get('email')?.value;\n        this.newsletterService.subscribe(email).subscribe(response => {\n          console.log('Subscription successful', response);\n          alert('Subscription successful!');\n        }, error => {\n          console.error('Subscription failed', error);\n          alert(error.error.message);\n        });\n      } else {\n        alert('Please enter a valid email address.');\n      }\n    }\n    changeImage(item) {\n      const images = {\n        'Tomate': '../assets/Tabs/Tomate.svg',\n        'VinRouge': '../assets/Tabs/Vin Rou.svg',\n        'Epices': '../assets/Tabs/Epic.svg',\n        'Pomme': '../assets/Tabs/Pomo.svg',\n        'Fromage': '../assets/Tabs/From.svg',\n        'Viande': '../assets/Tabs/Via.svg'\n      };\n      this.currentImage = images[item];\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NewsletterService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      viewQuery: function AppComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollContainer = _t.first);\n        }\n      },\n      decls: 1,\n      vars: 0,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [i3.RouterOutlet],\n      styles: [\".space-grotesk-bold[_ngcontent-%COMP%]{font-family:Space Grotesk,sans-serif!important;font-optical-sizing:auto!important;font-weight:700!important;font-style:normal!important}.h1[_ngcontent-%COMP%]{font-family:ObviouslyBlack}.font-space[_ngcontent-%COMP%]{font-family:Space}.f-new-s[_ngcontent-%COMP%]{font-family:NewSpirit}.f-pm[_ngcontent-%COMP%], .f-pr[_ngcontent-%COMP%]{font-family:Poppins-r}.dynamic-bg[_ngcontent-%COMP%]{position:relative;overflow:hidden;border-radius:32px;height:100%}.dynamic-bg[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;border-radius:inherit}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}